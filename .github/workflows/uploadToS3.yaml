name: Build and Upload ESP32 Binaries

on:
  push:
    branches:
      - main

jobs:
  build_and_upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install PlatformIO
      run: pip install -U platformio
      env:
        PLATFORMIO_HOME: ${{ github.workspace }}/.platformio

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1  # Ensure this is correct

    - name: Check if S3 Bucket Exists
      run: |
        if ! aws s3api head-bucket --bucket aqi-firmware-updates 2>/dev/null; then
          echo "S3 bucket does not exist. Exiting."
          exit 1
        fi

    - name: Extract FIRMWARE_VERSION
      id: extract_version
      run: |
        FIRMWARE_VERSION=$(grep -oP '(?<=#define FIRMWARE_VERSION ")[^"]+' include/config.h)
        echo "::set-output name=firmware_version::$FIRMWARE_VERSION"

    - name: Generate Binary Filename
      id: generate_filename
      run: |
        VERSION="${{ steps.extract_version.outputs.firmware_version }}"
        BINARY_FILENAME="firmware_${VERSION}.bin"
        echo "::set-output name=binary_filename::$BINARY_FILENAME"

    - name: Build Firmware
      run: |
        platformio run -e esp32doit-devkit-v1

    - name: Check Firmware File
      run: ls -R .pio/build || echo "No firmware file found!"

    - name: Upload Firmware to S3
      run: |
        BINARY_FILENAME="${{ steps.generate_filename.outputs.binary_filename }}"
        aws s3 cp .pio/build/esp32doit-devkit-v1/firmware.bin s3://aqi-firmware-updates/aqi/$BINARY_FILENAME

